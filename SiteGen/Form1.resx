<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>